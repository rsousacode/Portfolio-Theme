{
  "version": 3,
  "file": "home.css",
  "sources": [
    "Home.svelte",
    "TechStack.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {fly} from 'svelte/transition'\n\n    // Components\n    import Author from \"./Author.svelte\";\n    import Projects from \"./Projects.svelte\";\n    import TechStack from \"./TechStack.svelte\";\n\n    // Stores\n    import ProjectsStore from \"../stores/ProjectsStore\";\n    import {cleanTechStack} from \"../stores/TechStackStore\";\n    import {onMount} from \"svelte\";\n\n    // Store Data\n    let projectsData\n    let hideProjects = false\n    let pageLoaded = false\n\n    // Pagination\n    let currentPage = 1\n    let projectsPerPage = 3\n    let shownProjects = []\n\n    ProjectsStore.subscribe((data) => {\n        projectsData = data\n    })\n\n    function initProjects() {\n        closeAllProjects()\n        let startIndex\n        startIndex = currentPage * projectsPerPage - 3\n\n        if (currentPage === 1) {\n            startIndex = 0\n        }\n\n        let t = projectsPerPage * currentPage\n\n        if (projectsData.length < t) {\n            shownProjects = projectsData.slice(startIndex)\n        } else {\n            shownProjects = projectsData.slice(startIndex, projectsPerPage * currentPage)\n        }\n    }\n\n    function closeAllProjects() {\n        let i\n        for (i = 0; i < shownProjects.length; i++) {\n            shownProjects[i].toggled = false\n        }\n    }\n\n    function simulateLoading(exec) {\n        setTimeout(() => {\n            exec()\n        }, 800)\n\n    }\n\n    function onPageLoaded() {\n        pageLoaded = true\n    }\n\n    function getMaxNumPages() {\n        if (projectsData.length % projectsPerPage > 0) {\n            return Math.floor(projectsData.length / projectsPerPage) + 1\n        }\n        return projectsData.length / projectsPerPage\n\n    }\n\n    function onPageSwitchedEndLoading() {\n        hideProjects = false\n    }\n\n    function nextPage() {\n        currentPage++\n        onPageSwitched()\n    }\n\n    function previousPage() {\n        currentPage--\n        onPageSwitched()\n    }\n\n    function onPageSwitched() {\n        initProjects()\n        hideProjects = true\n        cleanTechStack()\n        simulateLoading(onPageSwitchedEndLoading)\n    }\n\n    initProjects()\n    simulateLoading(onPageLoaded)\n\n\n</script>\n<main>\n    <Author/>\n    {#if pageLoaded}\n        <div class=\"row mt-4\">\n            <div class=\"col-left projects pr-1 mb-2\" transition:fly=\"{{ x: -200, duration: 500}}\">\n                <div class=\"projects-title\" transition:fly>Projects</div>\n                {#if !hideProjects}\n                    <Projects projects={shownProjects}/>\n                {/if}\n            </div>\n            <TechStack/>\n        </div>\n            <ul class=\"pagination\" transition:fly=\"{{ x: 200, duration: 500, delay: 2000}}\">\n                <li on:click= {getMaxNumPages() !== currentPage ? nextPage : previousPage }>\n                    {currentPage} / {getMaxNumPages()}\n                </li>\n                {#if currentPage > 1}\n                    <li on:click={previousPage}>❮</li>\n                {/if}\n                {#if getMaxNumPages() !== currentPage}\n                    <li on:click={nextPage}>❯</li>\n                {/if}\n            </ul>\n    {/if}\n</main>\n\n<style>\n    ul.pagination {\n        position: fixed;\n        display: inline-block;\n        padding: 0;\n        margin: 0;\n        bottom: 5%;\n        left: 75%;\n        float: right;\n    }\n\n    ul.pagination li {display: inline;}\n\n    ul.pagination li {\n        float: left;\n        padding: 4px 8px;\n        text-decoration: none;\n        cursor: pointer;\n    }\n\n</style>\n",
    "<script>\n    import {fly, fade} from 'svelte/transition'\n    import {flip} from 'svelte/animate';\n\n    import TechStackStore from \"../stores/TechStackStore\";\n\n    let techStack\n\n    TechStackStore.subscribe(data => {\n        techStack = data\n    })\n\n</script>\n\n{#if techStack.length > 0}\n    <div class=\"col-right\" in:fade={{delay: 1900}} out:fade>\n        <div class=\"projects-title mb-2\">Project tech</div>\n        <div class=\"board\">\n            {#each techStack as tech(tech)}\n                <div class=\"card\"\n                     animate:flip>\n                    {tech}\n                </div>\n            {/each}\n        </div>\n    </div>\n{/if}\n\n\n<style>\n    .board {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-gap: 1em;\n        max-width: 36em;\n        margin: 0rem auto;\n    }\n\n</style>\n\n"
  ],
  "names": [],
  "mappings": "AA4HI,EAAE,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,EAAE,CACV,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,KAAK,AAChB,CAAC,AAED,EAAE,yBAAW,CAAC,EAAE,cAAC,CAAC,OAAO,CAAE,MAAM,AAAC,CAAC,AAEnC,EAAE,yBAAW,CAAC,EAAE,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,AACnB,CAAC;AC/GD,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,QAAQ,CAAE,GAAG,CACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CAAC,IAAI,AACrB,CAAC"
}